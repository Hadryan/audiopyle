---
swagger: "2.0"
info:
  description: An API offering inputs and outputs from the Audiopyle app
  title: Audiopyle API
  version: 0.0.1
definitions:
  ErrorModel:
    type: object
    properties:
      message:
        type: string
        nullable: true
    required:
    - message
  FileDetail:
    type: object
    properties:
      file_name:
        type: string
      size:
        description: "File size in bytes"
        type: integer
      created_on:
        description: "Unix creation date (UTC) in ISO 8601 format"
        type: string
        format: date-time
      last_modification:
        description: "Unix last modification date (UTC) in ISO 8601 format"
        type: string
        format: date-time
      last_access:
        description: "Unix last access date (UTC) in ISO 8601 format"
        type: string
        format: date-time
    required:
    - file_name
    - size
    - created_on
    - last_modification
    - last_access
  AudioTag:
    type: object
    properties:
      artist:
        type: string
      album:
        type: string
      title:
        type: string
      genre:
        type: string
      track:
        description: "Track number on an album"
        type: integer
      date:
        description: "Year of album release"
        type: integer
    required:
    - artist
    - album
    - title
    - genre
    - track
    - date
  MetricConfig:
    type: object
    additionalProperties:
      type: object
      properties:
        plugin:
          type: string
        transformation:
          type: object
          properties:
            name:
              type: string
            kwargs:
              type: object
              additionalProperties: true
      required:
      - plugin
      - transformation
  PluginConfig:
    type: object
    additionalProperties:
      type: object
      properties:
        block_size:
          type: integer
          nullable: true
        step_size:
          type: integer
          nullable: true
      additionalProperties: true
  ExtractionRequest:
    type: object
    properties:
      uuid:
        type: string
        nullable: true
      audio_file_name:
        type: string
      plugin_full_key:
        type: string
      plugin_config:
        type: object
        nullable: true
      metric_config:
        type: object
        nullable: true
    required:
    - audio_file_name
    - plugin_full_key
  VampPlugin:
    type: object
    properties:
      vendor:
        type: string
      name:
        type: string
      output:
        type: string
      library_file_name:
        type: string
    required:
    - vendor
    - name
    - output
    - library_file_name
  ExtractionStatus:
    type: object
    properties:
      task_id:
        type: string
        nullable: false
      status:
        type: string
        nullable: false
        enum: ["not_known", "in_progress", "done", "failed", "ignored"]
    required:
    - task_id
    - status
paths:
  "/audio/":
    get:
      description: "Returns list of available audio file names"
      responses:
        200:
          description: "A list of file names"
          schema:
            type: array
            items:
              type: string
          examples: [
            "102bpm_drum_loop.flac",
            "102bpm_drum_loop.mp3"
          ]
  "/audio/{file_name}":
    get:
      description: "Returns list of available audio file names"
      parameters:
      - in: path
        name: file_name
        required: true
        type: string
      responses:
        200:
          description: "Details of given audio file"
          schema:
            "$ref": "#/definitions/FileDetail"
          examples: {
            created_on: "2018-08-16 08:58:49",
            file_name: "102bpm_drum_loop.flac",
            last_access: "2018-08-16 08:58:49",
            last_modification: "2018-08-16 08:58:49",
            size: 111690
          }
        400:
          description: "file_name parameter was not provided in URL"
          schema:
            "$ref": "#/definitions/ErrorModel"
        404:
          description: "Can not find a file with given name"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/audio/{file_name}/tag":
    get:
      description: "Returns given audio file tag"
      parameters:
      - in: path
        name: file_name
        required: true
        type: string
      responses:
        200:
          description: "Id3 tag of given audio file"
          schema:
            "$ref": "#/definitions/AudioTag"
          examples: {
            album: "Unknown Album",
            artist: "Unknown Artist",
            date: 2017,
            genre: "Unknown Genre",
            title: "Unknown Title",
            track: 1
          }
        204:
          description: "Given audio file does not have Id3 tags"
        400:
          description: "file_name parameter was not provided in URL"
          schema:
            "$ref": "#/definitions/ErrorModel"
        404:
          description: "Can not find a file with given name"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/plugin":
    get:
      description: "Returns list of available VAMP plugins"
      responses:
        200:
          description: "List of available VAMP plugins"
          schema:
            type: array
            items:
              type: string
          examples: [
            "vamp-example-plugins:amplitudefollower:amplitude",
            "vamp-example-plugins:percussiononsets:onsets"
          ]
  "/plugin/{vendor}/{name}/{output}":
    get:
      description: "Returns details of given VAMP plugin"
      parameters:
      - name: vendor
        in: path
        required: true
        type: string
      - name: name
        in: path
        required: true
        type: string
      - name: output
        in: path
        required: true
        type: string
      responses:
        200:
          description: "Details of given VAMP plugin"
          schema:
            "$ref": "#/definitions/VampPlugin"
        400:
          description: "Vendor, name or output parameter were not given"
          schema:
            "$ref": "#/definitions/ErrorModel"
        404:
          description: "Plugin with given vendor, name or output dos not exist"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/config/metric":
    get:
      description: "Returns available metric configuration"
      responses:
        200:
          description: "Content of metric config JSON file"
          schema:
            "$ref": "#/definitions/MetricConfig"
        404:
          description: "There was no metric config file found"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/config/plugin":
    get:
      description: "Returns available plugin configuration"
      responses:
        200:
          description: "Content of plugin config JSON file"
          schema:
            "$ref": "#/definitions/PluginConfig"
          examples: {
            "vamp-example-plugins:amplitudefollower:amplitude": {
              "block_size":4096,
              "step_size":4096
            }
          }
        404:
          description: "There was no plugin config file found"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/request":
    get:
      description: "Returns list of received extraction requests"
      responses:
        200:
          description: "List of UUIDs (task IDs) from received requests"
          schema:
            type: array
            items:
              type: string
          examples: [
            "0b04c1b3-b366-5145-9248-6cb118d3be99",
            "27f0ccab-349c-51f7-9acc-37e8ade111dc"
          ]
    post:
      description: "Consumes extraction request parameters"
      parameters:
      - name: "request"
        in: "body"
        description: "Extraction request to be executed"
        required: true
        schema:
          "$ref": "#/definitions/ExtractionRequest"
      responses:
        201:
          description: "Accepted extraction request for further processing"
          schema:
            type: object
            properties:
              task_id:
                type: string
                nullable: false
            required:
            - task_id
        412:
          description: "Task can not be processed because its already processed (illegal state)"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/request/{task_id}":
    get:
      description: "Returns details of extraction request selected by UUID (task ID)"
      parameters:
      - name: task_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: "Details of extraction request"
          schema:
            type: object
            properties:
              task_id:
                type: string
              id3_tag:
                "$ref": "#/definitions/AudioTag"
              plugin:
                "$ref": "#/definitions/Plugin"
              plugin_config:
                "$ref": "#/definitions/PluginConfig"
              audio_meta:
                "$ref": "#/definitions/FileDetail"
          examples: {
            "audio_meta": {
              "bit_rate_kbps":371.7,
              "channels_count":1,
              "file_name":"102bpm_drum_loop.flac",
              "file_size_bytes":111690,
              "length_sec":2.378,
              "sample_rate":44100},
            "id3_tag": {
              "album":"Unknown Album",
              "artist":"Unknown Artist",
              "date":2017,
              "genre":"Unknown Genre",
              "title":"Unknown Title",
              "track":1},
            "plugin": {
              "library_file_name":"vamp-example-plugins.so",
              "name":"spectralcentroid",
              "output":"logcentroid",
              "vendor":"vamp-example-plugins"},
            "plugin_config": {
              "block_size":null,
              "params":{},
              "step_size":null},
            "task_id":"0b04c1b3-b366-5145-9248-6cb118d3be99"
          }
        400:
          description: "There was no task_id parameter provided in URL"
          schema:
            "$ref": "#/definitions/ErrorModel"
        404:
          description: "There is no extraction request with task_id (UUID) provided in URL"
          schema:
            "$ref": "#/definitions/ErrorModel"
  "/request/{task_id}/status":
    get:
      description: "Returns status of extraction request task selected by UUID (task ID)"
      parameters:
      - name: task_id
        in: path
        required: true
        type: string
      responses:
        200:
          description: "Returns details of requests task status"
          schema:
            "$ref": "#/definitions/ExtractionStatus"
        400:
          description: "Required parameter UUID (task_id) was not provided"
          schema:
            "$ref": "#/definitions/ErrorModel"
        404:
          description: "Requested task status is not known, which means that either there was no request with given UUID (task_id), or the task did not execute yet"
          schema:
            "$ref": "#/definitions/ExtractionStatus"
  "/request/automation":
    post:
      description: "Creates Cartesian product of requests from list of audio files and available (non-blacklisted) VAMP plugins and sends them for execution"
      responses:
        202:
          description: "Returns details of generated requests"
          schema:
            type: array
            items:
              "$ref": "#/definitions/ExtractionRequest"
          examples: [{
                       "audio_file_name": "102bpm_drum_loop.flac",
                       "metric_config": null,
                       "plugin_config": null,
                       "plugin_full_key": "vamp-example-plugins:spectralcentroid:logcentroid",
                       "uuid": "0b04c1b3-b366-5145-9248-6cb118d3be99"
                     }]
        412:
          description: "Audio files directory or VAMP plugins directory is empty; could not generate requests"
          schema:
            "$ref": "#/definitions/ErrorModel"